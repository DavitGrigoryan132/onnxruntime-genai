name: "Windows CUDA x64 Build"
on:
  workflow_dispatch:
  push:
    branches:
    - main
    - rel-*
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  AZCOPY_AUTO_LOGIN_TYPE: MSI
  AZCOPY_MSI_CLIENT_ID: 63b63039-6328-442f-954b-5a64d124e5b4
  cuda_dir: "${{ github.workspace }}\\cuda_sdk"
  cuda_version: "12.2"
  CUDA_PATH: ${{ github.workspace }}\\cuda_sdk\\v12.2
  binaryDir: 'build/cuda/win-x64'

jobs:
  windows-cuda-x64-build:
    runs-on: [ "self-hosted", "1ES.Pool=onnxruntime-genai-Win2022-GPU-A10" ]
    steps:
    - name: Checkout OnnxRuntime GenAI repo
      uses: actions/checkout@v4
      with:
        submodules: true

    - uses: actions/setup-python@v5
      with:
        python-version: '3.11.x'
        architecture: 'x64'

    - name: Download cuda
      run: |
        azcopy.exe cp --recursive "https://lotusscus.blob.core.windows.net/models/cuda_sdk/v${{ env.cuda_version }}" ${{ env.cuda_dir}}

    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Configure CMake
      run: |
        cmake --preset windows_x64_cuda_release -T cuda=${{ env.cuda_dir }}\\v${{ env.cuda_version }} -DTEST_PHI2=False

    - name: Build with CMake
      run: |
        cmake --build --preset windows_x64_cuda_release --parallel

    - name: Add CUDA to PATH
      run: |
        echo "${{ env.cuda_dir }}\\v${{ env.cuda_version }}\\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Build the C# API and Run the C# Tests
      run: |
        cd test\csharp
        dotnet test /p:Configuration=release /p:NativeBuildOutputDir="$env:GITHUB_WORKSPACE\$env:binaryDir\Release" /p:OrtLibDir="$env:GITHUB_WORKSPACE\ort\lib"

    - name: Install the Python Wheel and Test Dependencies
      run: |
        python -m pip install -r test\python\requirements.txt
        python -m pip install -r test\python\requirements-cuda.txt
        python -m pip install (Get-ChildItem ("$env:binaryDir\wheel\*.whl")) --no-deps

    - name: Use Dummy HuggingFace Token
      run: |
        Add-Content -Path $env:GITHUB_ENV -Value "HF_TOKEN=12345"

    - name: Run the Python Tests
      run: |
        python test/python/test_onnxruntime_genai.py --cwd "test\python" --test_models "test\test_models" --e2e

    - name: Verify Build Artifacts
      if: always()
      continue-on-error: true
      run: |
        
        Get-ChildItem -Path $env:GITHUB_WORKSPACE\$env:binaryDir -Recurse

    - name: Prepend CUDA to PATH and Run tests
      run: |
        $env:PATH = "${{ env.cuda_dir }}\\v${{ env.cuda_version }}\\bin;" + $env:PATH 
        echo "Current PATH variable is: $env:PATH" 
        copy $env:GITHUB_WORKSPACE\ort\lib\* .\$env:binaryDir\test\Release
        & .\$env:binaryDir\test\Release\unit_tests.exe